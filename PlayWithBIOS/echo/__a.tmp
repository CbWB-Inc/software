     1                                  ;>>===========================
     2                                  ;>>	BIOSで遊ぼっ！
     3                                  ;>>===========================
     4                                  
     5                                  section .data
     6                                  
     7                                  	_c_seg          equ 0x07c0
     8                                  	_c_ex_area_addr equ 0x200
     9                                  
    10                                  	_c_true         equ '1'
    11                                  	_c_false        equ '0'
    12                                  
    13                                  
    14                                  section .text
    15                                  
    16                                  boot:
    17                                  	; set segment register
    18 00000000 B8C007                          mov ax, _c_seg
    19 00000003 8ED8                            mov ds, ax
    20                                  
    21                                      ; テストして終了なら[m_isTest]にDEF_TRUEを設定する
    22                                      ; テストせず通常の処理をするなら[m_isTest]にDEF_FALSEを設定する
    23                                      ;
    24                                      ;mov byte [_m_isTest], _c_true
    25 00000005 C606[2800]30                mov byte [_m_isTest], _c_false
    26                                  
    27 0000000A B40E                        mov ah, 0x0e
    28                                      ;
    29                                      ; disk read
    30                                      ;     read to es:bx
    31                                      ;
    32 0000000C B8C007                      mov ax, _c_seg
    33 0000000F 8EC0                        mov es, ax
    34 00000011 BB0002                      mov bx, _c_ex_area_addr
    35                                  
    36 00000014 B402                        mov ah, 0x02 ; Read Sectors From Drive
    37 00000016 B280                        mov dl, 0x80 ; Drive
    38 00000018 B020                        mov al, 0x20 ; Sectors To Read Count ;
    39 0000001A B500                        mov ch, 0x00 ; Cylinder
    40 0000001C B102                        mov cl, 0x02 ; Sector(starts from 1, not 0) ; set 2. becouse not need MBR
    41 0000001E B600                        mov dh, 0x00 ; Head
    42                                  
    43 00000020 CD13                        int 0x13     ; Execute disk read
    44                                  
    45                                  
    46 00000022 E9DF12                  	jmp main
    47                                  
    48                                  
    49                                  
    50                                  ;>>****************************
    51                                  ;>> hlt
    52                                  ;>>****************************
    53                                  _hlt:
    54 00000025 F4                      	hlt
    55 00000026 EBFD                    	jmp _hlt
    56                                  
    57                                  
    58 00000028 00                      _m_isTest:       db 0
    59                                  
    60                                  
    61                                  
    62                                  ;>>****************************
    63                                  ;>> ブートローダパディング
    64                                  ;>>****************************
    65                                  
    66                                  
    67 00000029 00<rep 1D5h>            times 510-($-$$) db 0
    68                                  
    69                                  ;********************************
    70                                  ; ブートセクタシグネチャ
    71                                  ;********************************
    72                                  
    73 000001FE 55                      db 0x55
    74 000001FF AA                      db 0xAA
    75                                  
    76                                  ;********************************
    77                                  ; definition of variables
    78                                  ;********************************
    79                                  
    80 00000200 0D0A00                  _s_crlf:       db 0x0d, 0x0a, 0x00
    81                                  
    82                                  _m_buf_str:
    83 00000203 00<rep 80h>             	times 128 db 0 
    84                                      ;db 0, 10, 13, '                             '
    85                                  
    86                                  _m_rt_sts:
    87 00000283 00                          db 0
    88                                  
    89                                  _m_ax:
    90                                  _m_al:
    91 00000284 00                          db 0
    92                                  _m_ah:
    93 00000285 00                          db 0
    94                                  
    95                                  _m_bx:
    96                                  _m_bl:
    97 00000286 00                          db 0
    98                                  _m_bh:
    99 00000287 00                          db 0
   100                                  
   101                                  _m_cx:
   102                                  _m_cl:
   103 00000288 00                          db 0
   104                                  _m_ch:
   105 00000289 00                          db 0
   106                                  
   107                                  _m_dx:
   108                                  _m_dl:
   109 0000028A 00                          db 0
   110                                  _m_dh:
   111 0000028B 00                          db 0
   112                                  
   113                                  _m_x:
   114                                  _m_xl:
   115 0000028C 00                          db 0
   116                                  _m_xh:
   117 0000028D 00                          db 0
   118                                  _m_y:
   119                                  _m_yl:
   120 0000028E 00                          db 0
   121                                  _m_yh:
   122 0000028F 00                          db 0
   123                                  
   124                                  
   125                                  
   126                                  
   127                                  ;********************************
   128                                  ; definition of strings
   129                                  ;********************************
   130                                  
   131 00000290 54525545200D0A00        _s_true:    db 'TRUE ', 13, 10, 0
   132                                  
   133 00000298 46414C53450D0A00        _s_false:   db 'FALSE', 13, 10, 0
   134                                  
   135                                  
   136                                  
   137                                  section .text
   138                                  
   139                                  ;>>===========================
   140                                  ;>>  実験
   141                                  ;>>===========================
   142                                  ;>>****************************
   143                                  ;>> 0x00    Read Keyboard Input
   144                                  ;>>****************************
   145                                  read_key:
   146                                  
   147 000002A0 50                          push ax
   148 000002A1 53                          push bx
   149                                      
   150 000002A2 B8[EB02]                    mov ax, ._title1
   151 000002A5 E82903                      call disp_str
   152 000002A8 B8[0002]                    mov ax, _s_crlf
   153 000002AB E82303                      call disp_str
   154                                  
   155 000002AE B8[4B03]                    mov ax, ._title2
   156 000002B1 E81D03                      call disp_str
   157                                  
   158                                  ;    mov ah, 0x00
   159 000002B4 E8E803                      call get_key
   160 000002B7 89C3                        mov bx, ax
   161                                  ._loop:
   162 000002B9 B8[0002]                    mov ax, _s_crlf
   163 000002BC E81203                      call disp_str
   164 000002BF B8[5E03]                    mov ax, ._header1
   165 000002C2 E80C03                      call disp_str
   166 000002C5 88F8                        mov al, bh
   167 000002C7 E88602                      call disp_byte_hex
   168 000002CA B8[0002]                    mov ax, _s_crlf
   169 000002CD E80103                      call disp_str
   170                                      
   171 000002D0 B8[6C03]                    mov ax, ._header2
   172 000002D3 E8FB02                      call disp_str
   173 000002D6 88D8                        mov al, bl
   174 000002D8 E87502                      call disp_byte_hex
   175 000002DB B8[0002]                    mov ax, _s_crlf
   176 000002DE E8F002                      call disp_str
   177                                      
   178 000002E1 E8BB03                      call get_key
   179 000002E4 89C3                        mov bx, ax
   180 000002E6 EBD1                        jmp ._loop
   181                                      
   182 000002E8 5B                          pop bx
   183 000002E9 58                          pop ax
   184                                      
   185 000002EA C3                          ret
   186                                  
   187                                  ._title1:
   188 000002EB 2A2A2A2A2A2A2A2A2A-         db "******************************", 0x0d, 0x0a
   188 000002F4 2A2A2A2A2A2A2A2A2A-
   188 000002FD 2A2A2A2A2A2A2A2A2A-
   188 00000306 2A2A2A0D0A         
   189 0000030B 2A2030783030202020-         db "* 0x00    Read Keyboard Input" , 0x0d, 0x0a
   189 00000314 2052656164204B6579-
   189 0000031D 626F61726420496E70-
   189 00000326 75740D0A           
   190 0000032A 2A2A2A2A2A2A2A2A2A-         db "******************************", 0x0d, 0x0a, 0x00
   190 00000333 2A2A2A2A2A2A2A2A2A-
   190 0000033C 2A2A2A2A2A2A2A2A2A-
   190 00000345 2A2A2A0D0A00       
   191                                  
   192                                  ._title2:
   193 0000034B 506C6561736520656E-         db "Please enter key", 0x0d, 0x0a, 0x00
   193 00000354 746572206B65790D0A-
   193 0000035D 00                 
   194                                  
   195                                  ._header1:
   196 0000035E 4B657920636F646520-         db "Key code   : ", 0x00
   196 00000367 20203A2000         
   197                                  
   198                                  ._header2:
   199 0000036C 415343494920636F64-         db "ASCII code : ", 0x00
   199 00000375 65203A2000         
   200                                  
   201                                  ;
   202                                  ; sign  Key     ASCII
   203                                  ;----------------------------
   204                                  ; ret   0x1c    0x0d
   205                                  ; Esc   0x01    0x1b
   206                                  ; F1    0x3b    0x00
   207                                  ; F2    0x3c    0x00
   208                                  ; F3    0x3d    0x00
   209                                  ; F4    0x3e    0x00
   210                                  ; F5    0x3f    0x00
   211                                  ; F6    0x40    0x00
   212                                  ; F7    0x41    0x00
   213                                  ; F8    0x42    0x00
   214                                  ; F09   0x43    0x00
   215                                  ; F10   0x44    0x00
   216                                  ; F11   0x85    0x00
   217                                  ; F12   0x86    0x00
   218                                  ; PrtSc   -       -
   219                                  ; PrtSc   -       -
   220                                  ; SclLck  -       -
   221                                  ; Pause 0x00    0x00
   222                                  ; 漢字  0x29    0x60
   223                                  ;   1   0x02    0x31
   224                                  ;   2   0x03    0x32
   225                                  ;   3   0x04    0x33
   226                                  ;   4   0x05    0x34
   227                                  ;   5   0x06    0x35
   228                                  ;   6   0x07    0x36
   229                                  ;   7   0x08    0x37
   230                                  ;   8   0x09    0x38
   231                                  ;   9   0x0a    0x39
   232                                  ;   0   0x0b    0x30
   233                                  ;   -   0x2c    0xcd
   234                                  ;   ^   0x0d    0x3d
   235                                  ;   \    -        -
   236                                  ;  BS   0x0e    0x08
   237                                  ;  INS  0x52    0x00
   238                                  ; Home  0x47    0x00
   239                                  ; PgUp  0x49    0x00
   240                                  ; Tab   0x0f    0x09
   241                                  ;   q   0x10    0x51
   242                                  ;   w   0x11    0x57
   243                                  ;   e   0x12    0x45
   244                                  ;   r   0x13    0x52
   245                                  ;   t   0x14    0x54
   246                                  ;   y   0x15    0x59
   247                                  ;   u   0x16    0x55
   248                                  ;   i   0x17    0x49
   249                                  ;   o   0x18    0x4f
   250                                  ;   p   0x19    0x50
   251                                  ;   @   0x10    0x5b
   252                                  ;   [   0x1b    0x5d
   253                                  ;  Del  0x53    0x00
   254                                  ;  End  0x4f    0x00
   255                                  ; PgDn  0x51    0x00
   256                                  ; CapLk  -        -
   257                                  ;   a   0x1e    0x41
   258                                  ;   s   0x1f    0x53
   259                                  ;   d   0x20    0x44
   260                                  ;   f   0x21    0x46
   261                                  ;   g   0x22    0x47
   262                                  ;   h   0x23    0x48
   263                                  ;   j   0x24    0x4a
   264                                  ;   k   0x25    0x4b
   265                                  ;   l   0x26    0x4c
   266                                  ;   ;   0x27    0x3b
   267                                  ;   :   0x28    0x27
   268                                  ;   ]   0x2b    0x5c
   269                                  ; L Sft   -       -
   270                                  ;   z   0x2c    0x5a
   271                                  ;   x   0x2d    0x58
   272                                  ;   c   0x2e    0x43
   273                                  ;   v   0x2f    0x56
   274                                  ;   b   0x30    0x42
   275                                  ;   n   0x31    0x4e
   276                                  ;   m   0x32    0x4d
   277                                  ;   ,   0x33    0x2c
   278                                  ;   .   0x34    0x2e
   279                                  ;   /   0x35    0x2f
   280                                  ;   \     -       -
   281                                  ; R Sft   -       -
   282                                  ;  ↑   0x48    0x00
   283                                  ;
   284                                  ;
   285                                  ;
   286                                  ;
   287                                  ;
   288                                  ;
   289                                  
   290                                  
   291                                  
   292                                  ;>>****************************
   293                                  ;>> 0x01    Return Keyboard Status
   294                                  ;>>****************************
   295                                  get_kb_sts:
   296                                  
   297                                  ;   今のところ何の役に立つのかわからない<Remarks timestamp="2024年5月5日 20:27:29"/>
   298                                  
   299 0000037A 50                          push ax
   300 0000037B 53                          push bx
   301                                  
   302 0000037C B8[EC03]                    mov ax, ._title1
   303 0000037F E84F02                      call disp_str
   304 00000382 B8[0002]                    mov ax, _s_crlf
   305 00000385 E84902                      call disp_str
   306                                  
   307 00000388 B8[5504]                    mov ax, ._title2
   308 0000038B E84302                      call disp_str
   309                                  
   310                                  
   311                                  ._loop:
   312                                  
   313 0000038E B401                        mov ah, 0x01
   314 00000390 CD16                        int 0x16
   315                                      
   316 00000392 7455                        je ._no_data
   317                                  
   318 00000394 B8[0002]                    mov ax, _s_crlf
   319 00000397 E83702                      call disp_str
   320 0000039A B8[6804]                    mov ax, ._header1
   321 0000039D E83102                      call disp_str
   322 000003A0 88F8                        mov al, bh
   323 000003A2 E8AB01                      call disp_byte_hex
   324 000003A5 B8[0002]                    mov ax, _s_crlf
   325 000003A8 E82602                      call disp_str
   326                                  
   327 000003AB B8[7604]                    mov ax, ._header2
   328 000003AE E82002                      call disp_str
   329 000003B1 88D8                        mov al, bl
   330 000003B3 E89A01                      call disp_byte_hex
   331 000003B6 B8[0002]                    mov ax, _s_crlf
   332 000003B9 E81502                      call disp_str
   333                                  
   334 000003BC E8E002                      call get_key
   335                                      
   336                                      ;mov bx, ax
   337 000003BF B8[0002]                    mov ax, _s_crlf
   338 000003C2 E80C02                      call disp_str
   339 000003C5 B8[6804]                    mov ax, ._header1
   340 000003C8 E80602                      call disp_str
   341 000003CB 88F8                        mov al, bh
   342 000003CD E88001                      call disp_byte_hex
   343 000003D0 B8[0002]                    mov ax, _s_crlf
   344 000003D3 E8FB01                      call disp_str
   345                                      
   346 000003D6 B8[7604]                    mov ax, ._header2
   347 000003D9 E8F501                      call disp_str
   348 000003DC 88D8                        mov al, bl
   349 000003DE E86F01                      call disp_byte_hex
   350 000003E1 B8[0002]                    mov ax, _s_crlf
   351 000003E4 E8EA01                      call disp_str
   352                                      
   353 000003E7 EBA5                        jmp ._loop
   354                                  
   355                                  
   356                                  ._no_data:
   357                                  
   358                                  
   359 000003E9 EBA3                        jmp ._loop
   360                                  
   361                                  
   362 000003EB C3                          ret
   363                                  
   364                                  ._title1:
   365 000003EC 2A2A2A2A2A2A2A2A2A-         db "*********************************", 0x0d, 0x0a
   365 000003F5 2A2A2A2A2A2A2A2A2A-
   365 000003FE 2A2A2A2A2A2A2A2A2A-
   365 00000407 2A2A2A2A2A2A0D0A   
   366 0000040F 2A2030783031202020-         db "* 0x01    Return Keyboard Status" , 0x0d, 0x0a
   366 00000418 2052657475726E204B-
   366 00000421 6579626F6172642053-
   366 0000042A 74617475730D0A     
   367 00000431 2A2A2A2A2A2A2A2A2A-         db "*********************************", 0x0d, 0x0a, 0x00
   367 0000043A 2A2A2A2A2A2A2A2A2A-
   367 00000443 2A2A2A2A2A2A2A2A2A-
   367 0000044C 2A2A2A2A2A2A0D0A00 
   368                                  
   369                                  ._title2:
   370 00000455 506C6561736520656E-         db "Please enter key", 0x0d, 0x0a, 0x00
   370 0000045E 746572206B65790D0A-
   370 00000467 00                 
   371                                  
   372                                  ._header1:
   373 00000468 4B657920636F646520-         db "Key code   : ", 0x00
   373 00000471 20203A2000         
   374                                  
   375                                  ._header2:
   376 00000476 415343494920636F64-         db "ASCII code : ", 0x00
   376 0000047F 65203A2000         
   377                                  
   378                                  
   379                                  ;>>****************************
   380                                  ;>> 0x02    Return Shift Flag Status
   381                                  ;>>****************************
   382                                  get_key_st:
   383                                  
   384                                  
   385                                  
   386 00000484 B402                        mov ah, 0x02
   387 00000486 CD16                        int 0x16
   388                                      
   389                                      ;mov bx, ax
   390                                  
   391 00000488 C3                          ret
   392                                  
   393                                  ._title1:
   394 00000489 2A2A2A2A2A2A2A2A2A-         db "*********************************", 0x0d, 0x0a
   394 00000492 2A2A2A2A2A2A2A2A2A-
   394 0000049B 2A2A2A2A2A2A2A2A2A-
   394 000004A4 2A2A2A2A2A2A0D0A   
   395 000004AC 2A2030783031202020-         db "* 0x01    Return Keyboard Status" , 0x0d, 0x0a
   395 000004B5 2052657475726E204B-
   395 000004BE 6579626F6172642053-
   395 000004C7 74617475730D0A     
   396 000004CE 2A2A2A2A2A2A2A2A2A-         db "*********************************", 0x0d, 0x0a, 0x00
   396 000004D7 2A2A2A2A2A2A2A2A2A-
   396 000004E0 2A2A2A2A2A2A2A2A2A-
   396 000004E9 2A2A2A2A2A2A0D0A00 
   397                                  
   398                                  ._title2:
   399 000004F2 506C6561736520656E-         db "Please enter key", 0x0d, 0x0a, 0x00
   399 000004FB 746572206B65790D0A-
   399 00000504 00                 
   400                                  
   401                                  ._header1:
   402 00000505 616C203A2000                db "al : ", 0x00
   403                                  
   404                                  
   405                                  
   406                                  
   407                                  
   408                                  
   409                                  
   410                                  
   411                                  
   412                                  
   413                                  
   414                                  
   415                                  
   416                                  
   417                                  
   418                                  ;>>===========================
   419                                  ;>> 	サブルーチン
   420                                  ;>>===========================
   421                                  
   422                                  ;********************************
   423                                  ; nibble_hex
   424                                  ;       4bit整数を16進文字に変換する
   425                                  ;       0～15 -> '0'～'f'
   426                                  ; param  : al : 変換する数値
   427                                  ;               16以上を指定すると上位ニブルは無視され、下位ニブルが変換されて返る
   428                                  ;                 e.g. 0x21 -> '1'
   429                                  ; return : al : 変換された文字
   430                                  ;******************************
   431                                  nibble_hex:
   432                                  
   433 0000050B 240F                            and al, 0x0f
   434                                  
   435 0000050D 3C09                            cmp al, 0x09
   436 0000050F 7704                            ja .gt_9
   437                                  
   438 00000511 0430                            add al, 0x30
   439 00000513 EB02                            jmp .cnv_end
   440                                  
   441                                  .gt_9:
   442 00000515 0437                            add al, 0x37
   443                                  
   444                                  .cnv_end:
   445                                  
   446 00000517 C3                              ret
   447                                  
   448                                  
   449                                  ;
   450                                  ; jmpもcmpも美しくない。というわけでこんなの書いてみました。
   451                                  ;
   452                                  nibble_hex2:
   453                                  
   454 00000518 53                          push bx
   455                                  
   456                                  
   457 00000519 240F                        and al, 0x0f
   458 0000051B BB0000                      mov bx, 0
   459 0000051E 88C3                        mov bl, al
   460 00000520 83EB0A                      sub bx, 10
   461 00000523 88FB                        mov bl, bh
   462                                  
   463 00000525 C0FB07                      sar bl, 7
   464 00000528 F6D3                        not bl
   465                                  
   466 0000052A 80E307                      and bl, 7
   467                                  
   468 0000052D 00D8                        add al, bl
   469 0000052F 83C030                      add ax, 0x30
   470                                  
   471 00000532 5B                          pop bx
   472                                  
   473 00000533 C3                          ret
   474                                  
   475                                  
   476                                  ;********************************
   477                                  ; byte_hex
   478                                  ;       1バイトの数値を16進文字列に変換する
   479                                  ; param  : al : 変換したい数値
   480                                  ; return : bx : 変換した2文字の16進文字
   481                                  ;********************************
   482                                  byte_hex:
   483 00000534 50                          push ax
   484 00000535 51                          push cx
   485                                  
   486 00000536 88C1                        mov cl, al
   487 00000538 240F                        and al, 0x0f
   488 0000053A B400                        mov ah, 0
   489 0000053C E8CCFF                      call nibble_hex
   490 0000053F 88C7                        mov bh, al
   491                                  
   492 00000541 88C8                        mov al, cl
   493 00000543 C0E804                      shr al, 4
   494 00000546 B400                        mov ah, 0
   495 00000548 E8C0FF                      call nibble_hex
   496 0000054B 88C3                        mov bl, al
   497                                  
   498 0000054D 59                          pop cx
   499 0000054E 58                          pop ax
   500                                  
   501 0000054F C3                          ret
   502                                  
   503                                  
   504                                  ;********************************
   505                                  ; disp_byte_hex
   506                                  ;      1バイトの数値を16進で表示する
   507                                  ; param  : al : 表示したい数値
   508                                  ;********************************
   509                                  disp_byte_hex:
   510 00000550 50                          push ax
   511 00000551 53                          push bx
   512                                  
   513 00000552 E8DFFF                      call byte_hex
   514                                  
   515 00000555 B40E                        mov ah, 0x0e
   516 00000557 88D8                        mov al, bl
   517 00000559 CD10                        int 0x10
   518 0000055B 88F8                        mov al, bh
   519 0000055D CD10                        int 0x10
   520                                  
   521 0000055F 5B                          pop bx
   522 00000560 58                          pop ax
   523                                  
   524 00000561 C3                          ret
   525                                  
   526                                  
   527                                  ;********************************
   528                                  ; disp_dec
   529                                  ;      1ワードの数値を10進で表示する
   530                                  ; param  : ax : 表示したい数値
   531                                  ;********************************
   532                                  disp_dec:
   533 00000562 50                          push ax
   534 00000563 53                          push bx
   535                                  
   536 00000564 BB0000                      mov bx, 0
   537 00000567 BE[9005]                    mov si, ._buf
   538 0000056A 83C603                      add si, 3
   539                                  
   540                                  ._loop:
   541 0000056D BA0000                      mov dx, 0
   542 00000570 BB0A00                      mov bx, 10
   543 00000573 F7F3                        div bx
   544 00000575 89C3                        mov bx, ax
   545 00000577 88D0                        mov al, dl
   546 00000579 0430                        add al, 0x30
   547 0000057B 8804                        mov [si], al
   548 0000057D 46                          inc si
   549 0000057E 89D8                        mov ax, bx
   550                                  
   551 00000580 83FB00                      cmp bx, 0
   552 00000583 75E8                        jne ._loop
   553                                  
   554 00000585 4E                          dec si
   555 00000586 FD                          std
   556 00000587 89F0                        mov ax, si
   557 00000589 E84500                      call disp_str
   558 0000058C FC                          cld
   559                                  
   560 0000058D 5B                          pop bx
   561 0000058E 58                          pop ax
   562                                  
   563 0000058F C3                          ret
   564                                  
   565                                  
   566 00000590 000A0D                  ._buf db 0x00, 0x0a, 0x0d
   567 00000593 00<rep Ch>              	times 12 db 0
   568                                  
   569                                  
   570                                  ;********************************
   571                                  ; disp_word_hex
   572                                  ;       2バイト（1ワード）のデータを表示する
   573                                  ;	（ビッグエンディアン表記）
   574                                  ; param : ax : 表示するword
   575                                  ;********************************
   576                                  disp_word_hex:
   577                                  
   578 0000059F 50                          push ax
   579 000005A0 53                          push bx
   580                                  
   581 000005A1 89C3                        mov bx, ax
   582 000005A3 88F8                        mov al, bh
   583 000005A5 E8A8FF                      call disp_byte_hex
   584                                  
   585 000005A8 88D8                        mov al, bl
   586 000005AA E8A3FF                      call disp_byte_hex
   587                                  
   588                                  ._end:
   589                                  
   590 000005AD 5B                          pop bx
   591 000005AE 58                          pop ax
   592                                  
   593 000005AF C3                          ret
   594                                  
   595                                  
   596                                  ;********************************
   597                                  ; byte_hex_mem
   598                                  ;      バイトデータを16進文字に変換してメモリに設定する
   599                                  ; param  : al : 16進文字に変換するバイトデータ
   600                                  ;          bx : 変換した16進文字を設定するメモリのアドレス
   601                                  ;********************************
   602                                  byte_hex_mem:
   603 000005B0 53                              push bx
   604 000005B1 51                          push cx
   605 000005B2 FF36[8602]                  push word [_m_bx]
   606 000005B6 891E[8602]                  mov word [_m_bx], bx
   607                                  
   608 000005BA E877FF                      call byte_hex
   609 000005BD 89D9                        mov cx, bx
   610                                  
   611 000005BF 8B1E[8602]                  mov word bx, [_m_bx]
   612 000005C3 880F                        mov byte [bx], cl
   613 000005C5 83C301                      add bx, 1
   614 000005C8 882F                        mov byte [bx], ch
   615                                  
   616 000005CA 8F06[8602]                  pop word [_m_bx]
   617 000005CE 59                          pop cx
   618 000005CF 5B                          pop bx
   619                                  
   620 000005D0 C3                          ret
   621                                  
   622                                  
   623                                  ;********************************
   624                                  ; disp_str
   625                                  ;       display null-terminated string.
   626                                  ; param : ax : addr of mem where string is set.
   627                                  ;********************************
   628                                  disp_str:
   629                                  
   630 000005D1 50                          push ax
   631 000005D2 56                          push si
   632                                  
   633 000005D3 89C6                        mov si, ax
   634                                  ;        cld
   635 000005D5 B40E                        mov ah, 0x0E
   636                                  
   637                                  ._loop:
   638 000005D7 AC                          lodsb
   639                                  
   640 000005D8 08C0                        or al, al
   641 000005DA 7404                        jz ._loop_end
   642                                  
   643 000005DC CD10                        int 0x10
   644                                  
   645 000005DE EBF7                        jmp ._loop
   646                                  
   647                                  ._loop_end:
   648                                  
   649 000005E0 5E                          pop si
   650 000005E1 58                          pop ax
   651                                  
   652 000005E2 C3                          ret
   653                                  
   654                                  
   655                                  ;********************************
   656                                  ; mem_set
   657                                  ;       set mem.
   658                                  ; param : ax : addr of mem where value will be set.
   659                                  ;         bl : value to be set.
   660                                  ;         cx : size to be set.
   661                                  ;********************************
   662                                  mem_set:
   663 000005E3 51                          push cx
   664 000005E4 56                          push si
   665 000005E5 FF36[8802]                  push word [_m_cx]
   666 000005E9 53                          push bx
   667 000005EA 52                          push dx
   668                                  
   669 000005EB 890E[8802]                  mov word [_m_cx], cx
   670                                  
   671 000005EF 89C6                        mov si, ax
   672 000005F1 B90000                      mov cx, 0
   673                                  
   674                                  ._value_set_loop:
   675 000005F4 881C                        mov byte [si], bl
   676 000005F6 46                          inc si
   677 000005F7 41                          inc cx
   678                                  
   679 000005F8 89CA                        mov dx, cx
   680 000005FA 3B16[8802]                  cmp dx, [_m_cx]
   681 000005FE 75F4                        jne ._value_set_loop
   682                                  
   683 00000600 5A                          pop dx
   684 00000601 5B                          pop bx
   685 00000602 8F06[8802]                  pop word [_m_cx]
   686 00000606 5E                          pop si
   687 00000607 59                          pop cx
   688                                  
   689 00000608 C3                          ret
   690                                  
   691                                  
   692                                  ;********************************
   693                                  ; mem_cpy
   694                                  ;       copy from mem to mem.
   695                                  ; param : ax : addr of mem where to-value will be set.
   696                                  ;         bx : addr of mem where from-value is set.
   697                                  ;         cx : copy size.
   698                                  ;********************************
   699                                  mem_cpy:
   700 00000609 53                          push bx
   701 0000060A 51                          push cx
   702 0000060B 52                          push dx
   703 0000060C FF36[8602]                  push word [_m_bx]
   704 00000610 FF36[8802]                  push word [_m_cx]
   705 00000614 56                          push si
   706                                  
   707 00000615 891E[8602]                  mov word [_m_bx], bx
   708 00000619 890E[8802]                  mov word [_m_cx], cx
   709                                  
   710 0000061D B90000                      mov cx, 0
   711 00000620 89C6                        mov si, ax
   712                                  
   713                                  ._copy_loop:
   714 00000622 8A37                        mov byte dh, [bx]
   715 00000624 8834                        mov [si], dh
   716                                  
   717 00000626 46                          inc si
   718 00000627 43                          inc bx
   719 00000628 41                          inc cx
   720                                  
   721 00000629 3B0E[8802]                  cmp cx, [_m_cx]
   722 0000062D 72F3                        jb ._copy_loop
   723                                  
   724 0000062F 5E                          pop si
   725 00000630 8F06[8802]                  pop word [_m_cx]
   726 00000634 8F06[8602]                  pop word [_m_bx]
   727 00000638 5A                          pop dx
   728 00000639 59                          pop cx
   729 0000063A 5B                          pop bx
   730                                  
   731 0000063B C3                          ret
   732                                  
   733                                  
   734                                  ;********************************
   735                                  ; mem_cmp
   736                                  ;       2つの領域を指定したサイズで比べる
   737                                  ; param : ax : 1つ目のエリアのアドレス
   738                                  ;         bx : 2つ目のエリアのアドレス
   739                                  ;         cx : 比較するサイズ
   740                                  ; return: dl : 一致したら0、異なっていたら1が返る
   741                                  ;********************************
   742                                  mem_cmp:
   743 0000063C B200                        mov dl, 0
   744                                  
   745 0000063E 50                          push ax
   746 0000063F 53                          push bx
   747 00000640 51                          push cx
   748 00000641 56                          push si
   749 00000642 FF36[8802]                  push word [_m_cx]
   750                                  
   751                                  
   752 00000646 890E[8802]                  mov [_m_cx], cx
   753 0000064A B90000                      mov cx, 0
   754 0000064D 89C6                        mov si, ax
   755                                  
   756                                  ._loop:
   757                                  
   758 0000064F A1[8802]                    mov ax, [_m_cx]
   759 00000652 3B0E[8802]                  cmp cx, [_m_cx]
   760 00000656 740F                        je ._e
   761                                  
   762                                  
   763 00000658 8A07                        mov byte al, [bx]
   764                                  
   765 0000065A 3804                        cmp [si], al
   766 0000065C 7505                        jne ._ne
   767                                  
   768 0000065E 46                          inc si
   769 0000065F 43                          inc bx
   770 00000660 41                          inc cx
   771                                  
   772 00000661 EBEC                        jmp ._loop
   773                                  
   774                                  ._ne:
   775 00000663 B201                        mov dl, 1
   776 00000665 EB02                        jmp ._end
   777                                  
   778                                  ._e:
   779 00000667 B200                        mov dl, 0
   780                                  
   781                                  ._end:
   782 00000669 8F06[8802]                  pop word [_m_cx]
   783 0000066D 5E                          pop si
   784 0000066E 59                          pop cx
   785 0000066F 5B                          pop bx
   786 00000670 58                          pop ax
   787                                  
   788 00000671 C3                          ret
   789                                  
   790                                  
   791                                  ;********************************
   792                                  ; mem_dsp
   793                                  ;       指定された領域を16進で指定したサイズ表示する
   794                                  ; param : ax : 表示する領域のアドレス
   795                                  ;         bx : 表示するサイズ
   796                                  ;********************************
   797                                  mem_dsp:
   798                                  
   799 00000672 50                          push ax
   800 00000673 51                          push cx
   801 00000674 56                          push si
   802                                  
   803 00000675 83FB00                      cmp bx, 0
   804 00000678 7413                        je ._end
   805                                  
   806 0000067A B90000                      mov cx, 0
   807 0000067D 89C6                        mov si, ax
   808                                  
   809                                  ._loop:
   810 0000067F 8A04                        mov byte al, [si]
   811 00000681 E8CCFE                      call disp_byte_hex
   812 00000684 46                          inc si
   813 00000685 41                          inc cx
   814 00000686 39D9                        cmp cx, bx
   815 00000688 72F5                        jb ._loop
   816                                  
   817                                  
   818 0000068A 5E                          pop si
   819 0000068B 59                          pop cx
   820 0000068C 58                          pop ax
   821                                  
   822                                  ._end:
   823                                          
   824 0000068D C3                          ret
   825                                  
   826                                  
   827                                  ;********************************
   828                                  ; str_len
   829                                  ;       ゼロターミネートされた文字列の長さを求める
   830                                  ; param   : ax : 文字列のアドレス
   831                                  ; returen ; bx : 文字列の長さ
   832                                  ;********************************
   833                                  str_len:
   834                                  
   835 0000068E 56                          push si
   836                                  
   837 0000068F 89C6                        mov si, ax
   838 00000691 BB0000                      mov bx, 0
   839                                  
   840                                  ._loop:
   841 00000694 803C00                      cmp byte [si], 0x00
   842 00000697 7404                        je ._exit_loop
   843                                  
   844 00000699 46                          inc si
   845 0000069A 43                          inc bx
   846                                  
   847 0000069B EBF7                        jmp ._loop
   848                                  
   849                                  ._exit_loop:
   850                                  
   851 0000069D 5E                          pop si
   852                                  
   853 0000069E C3                          ret
   854                                  
   855                                  ;********************************
   856                                  ; get_key
   857                                  ;       キー入力待ちして、押下されたキーコードとアスキーコードを返す
   858                                  ;	（未確認だけどアスキーコードがないキーを押されるとアスキーコードに0x00が返るんじゃないかな）
   859                                  ; returen ; ah : キーコード
   860                                  ;           al : アスキーコード
   861                                  ;********************************
   862                                  get_key:
   863                                  	
   864                                  
   865 0000069F B400                        mov ah, 0x00
   866 000006A1 CD16                        int 0x16
   867                                  
   868                                  
   869 000006A3 89C3                        mov bx, ax
   870                                  
   871                                  
   872 000006A5 C3                          ret
   873                                  
   874                                  ;****************************
   875                                  ; power_off
   876                                  ; 	パワーオフ
   877                                  ;****************************
   878                                  power_off:
   879                                  
   880                                      ; APM-BIOSのバージョン取得
   881 000006A6 B80053                      mov ax, 0x5300
   882 000006A9 BB0000                      mov bx, 0
   883 000006AC CD15                        int 0x15
   884 000006AE 0F8273F9                    jc _hlt
   885 000006B2 3D0101                      cmp ax, 0x0101
   886 000006B5 0F886CF9                    js _hlt
   887                                  
   888                                      ; リアルモードからの制御を宣言（これ、もしかしたらリアルモードへの変更かも）
   889 000006B9 B80153                      mov ax, 0x5301
   890 000006BC BB0000                      mov bx, 0
   891 000006BF CD15                        int 0x15
   892                                  
   893                                      ; APM-BIOS ver 1.1を有効化
   894 000006C1 B80E53                      mov ax, 0x530e
   895 000006C4 BB0000                      mov bx, 0
   896 000006C7 B90101                      mov cx, 0x0101
   897 000006CA CD15                        int 0x15
   898 000006CC 0F8255F9                    jc _hlt
   899                                  
   900                                      ; 全デバイスのAPM設定を連動させる
   901 000006D0 B80F53                      mov ax, 0x530f
   902 000006D3 BB0100                      mov bx, 0x0001
   903 000006D6 B90100                      mov cx, 0x0001
   904 000006D9 CD15                        int 0x15
   905 000006DB 0F8246F9                    jc _hlt
   906                                  
   907                                      ; 全デバイスのAPM機能有効化
   908 000006DF B80853                      mov ax, 0x5308
   909 000006E2 BB0100                      mov bx, 0x0001
   910 000006E5 B90100                      mov cx, 0x0001
   911 000006E8 CD15                        int 0x15
   912 000006EA 0F8237F9                    jc _hlt
   913                                  
   914                                      ; 電源OFF
   915 000006EE B80753                      mov ax, 0x5307
   916 000006F1 BB0100                      mov bx, 0x0001
   917 000006F4 B90300                      mov cx, 0x0003
   918 000006F7 CD15                        int 0x15
   919                                  
   920                                  
   921 000006F9 E929F9                      jmp _hlt
   922                                  
   923 000006FC C3                          ret
   924                                  
   925                                  ;****************************
   926                                  ; disp_nl
   927                                  ;   改行する
   928                                  ;****************************
   929                                  disp_nl:
   930                                  
   931 000006FD 50                          push ax
   932                                  
   933 000006FE B8[0002]                    mov ax, _s_crlf
   934 00000701 E8CDFE                      call disp_str
   935                                  
   936 00000704 58                          pop ax
   937                                      
   938 00000705 C3                          ret
   939                                  
   940                                  ;>>===========================
   941                                  ;>> テスト
   942                                  ;>>===========================
   943                                  _test_codes:
   944                                  
   945                                  ;>>===========================
   946                                  ;>> 個別テスト
   947                                  ;>>===========================
   948                                  
   949                                  ;********************************
   950                                  ; test_disp_str
   951                                  ;      disp_strのテスト
   952                                  ; param  : ax : 表示する文字列のアドレス（ゼロターミネート）
   953                                  ;********************************
   954                                  test_disp_str:
   955                                  
   956                                      ; 開始メッセージ表示
   957 00000706 B8[1907]                    mov ax, ._start_msg
   958 00000709 E8C5FE                      call disp_str
   959                                  
   960                                      ; テスト実行
   961 0000070C B8[AF07]                    mov ax, ._test_data 
   962 0000070F E8BFFE                      call disp_str
   963                                  
   964                                  
   965                                      ; 改行の調整
   966                                      ;mov ax, _s_crlf
   967 00000712 B8[0002]                    mov ax, _s_crlf
   968 00000715 E8B9FE                      call disp_str
   969                                  
   970 00000718 C3                      	ret
   971                                  
   972                                  
   973                                  ._start_msg:
   974 00000719 0D0A                        db 0x0d, 0x0a
   975 0000071B 2A2A2A2A2A2A2A2A2A-         db '****************************', 0x0d, 0x0a
   975 00000724 2A2A2A2A2A2A2A2A2A-
   975 0000072D 2A2A2A2A2A2A2A2A2A-
   975 00000736 2A0D0A             
   976 00000739 544152474554203A20-         db 'TARGET : disp_str ', 0x0d, 0x0a
   976 00000742 646973705F73747220-
   976 0000074B 0D0A               
   977 0000074D 202053554343455353-         db '  SUCCESS : display', 0x0d, 0x0a
   977 00000756 203A20646973706C61-
   977 0000075F 790D0A             
   978 00000762 202020202020202020-         db '              "TRUE', 0x0d, 0x0a
   978 0000076B 202020202022545255-
   978 00000774 450D0A             
   979 00000777 202020202020202020-         db '               FALSE"', 0x0d, 0x0a
   979 00000780 20202020202046414C-
   979 00000789 5345220D0A         
   980 0000078E 2A2A2A2A2A2A2A2A2A-         db '****************************', 0x0d, 0x0a
   980 00000797 2A2A2A2A2A2A2A2A2A-
   980 000007A0 2A2A2A2A2A2A2A2A2A-
   980 000007A9 2A0D0A             
   981 000007AC 0D0A00                      db 0x0d, 0x0a, 0
   982                                  
   983                                  
   984                                  ._test_data:
   985 000007AF 545255450D0A46414C-         db 'TRUE', 0x0d, 0x0a, 'FALSE',  0x00, 'FALSE', 0x0d, 0x0a, 'TRUE', 0x00 
   985 000007B8 53450046414C53450D-
   985 000007C1 0A5452554500       
   986                                  
   987                                  
   988                                  ;********************************
   989                                  ; test_disp_byte_hex
   990                                  ;      disp_byte_hexのテスト
   991                                  ; param  : al : 表示したい数値
   992                                  ;********************************
   993                                  test_disp_byte_hex:
   994                                  
   995                                      ; 開始メッセージ表示
   996 000007C7 B8[1008]                    mov ax, ._start_msg
   997 000007CA E804FE                      call disp_str
   998                                  
   999                                      ; テスト実行
  1000 000007CD B001                        mov al, 0x01
  1001 000007CF E87EFD                      call disp_byte_hex
  1002                                  
  1003 000007D2 B009                        mov al, 0x09
  1004 000007D4 E879FD                      call disp_byte_hex
  1005                                  
  1006 000007D7 B00A                        mov al, 0x0a
  1007 000007D9 E874FD                      call disp_byte_hex
  1008                                  
  1009 000007DC B00F                        mov al, 0x0f
  1010 000007DE E86FFD                      call disp_byte_hex
  1011                                  
  1012 000007E1 B010                        mov al, 0x10
  1013 000007E3 E86AFD                      call disp_byte_hex
  1014                                  
  1015 000007E6 B090                        mov al, 0x90
  1016 000007E8 E865FD                      call disp_byte_hex
  1017                                  
  1018 000007EB B0A0                        mov al, 0xa0
  1019 000007ED E860FD                      call disp_byte_hex
  1020                                  
  1021 000007F0 B0F0                        mov al, 0xf0
  1022 000007F2 E85BFD                      call disp_byte_hex
  1023                                  
  1024 000007F5 B0F1                        mov al, 0xf1
  1025 000007F7 E856FD                      call disp_byte_hex
  1026                                  
  1027 000007FA B0A9                        mov al, 0xa9
  1028 000007FC E851FD                      call disp_byte_hex
  1029                                  
  1030 000007FF B09A                        mov al, 0x9a
  1031 00000801 E84CFD                      call disp_byte_hex
  1032                                  
  1033 00000804 B01F                        mov al, 0x1f
  1034 00000806 E847FD                      call disp_byte_hex
  1035                                  
  1036                                  
  1037                                      ; 改行の調整
  1038 00000809 B8[0002]                    mov ax, _s_crlf
  1039 0000080C E8C2FD                      call disp_str
  1040                                  
  1041 0000080F C3                      	ret
  1042                                  
  1043                                  
  1044                                  ._start_msg:
  1045 00000810 0D0A                        db 0x0d, 0x0a
  1046 00000812 2A2A2A2A2A2A2A2A2A-         db '***********************************************', 0x0d, 0x0a
  1046 0000081B 2A2A2A2A2A2A2A2A2A-
  1046 00000824 2A2A2A2A2A2A2A2A2A-
  1046 0000082D 2A2A2A2A2A2A2A2A2A-
  1046 00000836 2A2A2A2A2A2A2A2A2A-
  1046 0000083F 2A2A0D0A           
  1047 00000843 544152474554203A20-         db 'TARGET : disp_byte_hex', 0x0d, 0x0a
  1047 0000084C 646973705F62797465-
  1047 00000855 5F6865780D0A       
  1048 0000085B 202053554343455353-         db '  SUCCESS : display "01090A0F1090A0F0F1A99A1F"', 0x0d, 0x0a
  1048 00000864 203A20646973706C61-
  1048 0000086D 792022303130393041-
  1048 00000876 304631303930413046-
  1048 0000087F 304631413939413146-
  1048 00000888 220D0A             
  1049 0000088B 2A2A2A2A2A2A2A2A2A-         db '***********************************************', 0x0d, 0x0a
  1049 00000894 2A2A2A2A2A2A2A2A2A-
  1049 0000089D 2A2A2A2A2A2A2A2A2A-
  1049 000008A6 2A2A2A2A2A2A2A2A2A-
  1049 000008AF 2A2A2A2A2A2A2A2A2A-
  1049 000008B8 2A2A0D0A           
  1050 000008BC 0D0A00                      db 0x0d, 0x0a, 0
  1051                                  
  1052                                  
  1053                                  ;********************************
  1054                                  ; test_byte_hex_mem
  1055                                  ;      byte_hex_memのテスト
  1056                                  ; param  : al : 16進文字に変換するバイト
  1057                                  ;          bx : 変換した文字列を設定するアドレス
  1058                                  ;********************************
  1059                                  test_byte_hex_mem:
  1060                                  
  1061                                      ; 開始メッセージ表示
  1062 000008BF B8[9A09]                    mov ax, ._s_start_msg1
  1063 000008C2 E80CFD                      call disp_str
  1064                                  
  1065 000008C5 B8[4F0A]                    mov ax, ._s_expected_result
  1066 000008C8 E806FD                      call disp_str
  1067                                  
  1068 000008CB B8[FA09]                    mov ax, ._s_start_msg2
  1069 000008CE E800FD                      call disp_str
  1070                                  
  1071                                      ; テスト実行
  1072 000008D1 B0F0                        mov al, 0xf0
  1073 000008D3 BB[310A]                    mov bx, ._s_test_result
  1074 000008D6 E8D7FC                      call byte_hex_mem
  1075                                  
  1076 000008D9 B0A0                        mov al, 0xa0
  1077 000008DB 83C302                      add bx, 2
  1078 000008DE E8CFFC                      call byte_hex_mem
  1079                                  
  1080 000008E1 B090                        mov al, 0x90
  1081 000008E3 83C302                      add bx, 2
  1082 000008E6 E8C7FC                      call byte_hex_mem
  1083                                  
  1084 000008E9 B010                        mov al, 0x10
  1085 000008EB 83C302                      add bx, 2
  1086 000008EE E8BFFC                      call byte_hex_mem
  1087                                  
  1088 000008F1 B01F                        mov al, 0x1f
  1089 000008F3 83C302                      add bx, 2
  1090 000008F6 E8B7FC                      call byte_hex_mem
  1091                                  
  1092 000008F9 B09A                        mov al, 0x9a
  1093 000008FB 83C302                      add bx, 2
  1094 000008FE E8AFFC                      call byte_hex_mem
  1095                                  
  1096 00000901 B0A9                        mov al, 0xa9
  1097 00000903 83C302                      add bx, 2
  1098 00000906 E8A7FC                      call byte_hex_mem
  1099                                  
  1100 00000909 B0F1                        mov al, 0xf1
  1101 0000090B 83C302                      add bx, 2
  1102 0000090E E89FFC                      call byte_hex_mem
  1103                                  
  1104 00000911 B00F                        mov al, 0x0f
  1105 00000913 83C302                      add bx, 2
  1106 00000916 E897FC                      call byte_hex_mem
  1107                                  
  1108 00000919 B00A                        mov al, 0x0a
  1109 0000091B 83C302                      add bx, 2
  1110 0000091E E88FFC                      call byte_hex_mem
  1111                                  
  1112 00000921 B009                        mov al, 0x09
  1113 00000923 83C302                      add bx, 2
  1114 00000926 E887FC                      call byte_hex_mem
  1115                                  
  1116 00000929 B001                        mov al, 0x01
  1117 0000092B 83C302                      add bx, 2
  1118 0000092E E87FFC                      call byte_hex_mem
  1119                                  
  1120                                  
  1121                                      ;mov ax, ._s_test_result
  1122                                      ;call disp_str
  1123                                  
  1124                                  
  1125                                      ; 改行の調整
  1126                                      ;mov ax, _c_crlf
  1127                                      ;call disp_str
  1128                                      ;call disp_str
  1129                                  
  1130                                  
  1131                                      ; メッセージ表示
  1132 00000931 B8[790A]                    mov ax,	._s_result_msg1
  1133 00000934 E89AFC                      call disp_str
  1134                                  
  1135 00000937 B8[4F0A]                    mov ax, ._s_expected_result
  1136 0000093A E894FC                      call disp_str
  1137                                  
  1138 0000093D B8[0002]                    mov ax, _s_crlf
  1139 00000940 E88EFC                      call disp_str
  1140                                  
  1141 00000943 B8[8C0A]                    mov ax, ._s_result_msg2
  1142 00000946 E888FC                      call disp_str  
  1143                                  
  1144 00000949 B8[310A]                    mov ax, ._s_test_result
  1145 0000094C E882FC                      call disp_str
  1146                                  
  1147 0000094F B8[0002]                    mov ax, _s_crlf
  1148 00000952 E87CFC                      call disp_str
  1149 00000955 E879FC                      call disp_str
  1150                                  
  1151                                  
  1152                                      ; 結果の確認
  1153                                  
  1154 00000958 B8[4F0A]                    mov ax, ._s_expected_result 
  1155 0000095B BB[310A]                    mov bx, ._s_test_result
  1156 0000095E B90000                      mov cx, 0
  1157                                  ._loop:
  1158 00000961 01C8                        add ax, cx
  1159 00000963 01CB                        add bx, cx
  1160 00000965 B90100                      mov cx, 0x01
  1161                                  
  1162 00000968 53                          push bx
  1163 00000969 52                          push dx
  1164                                  
  1165 0000096A 8B17                        mov dx, [bx]
  1166 0000096C 8916[8C02]                  mov [_m_x], dx
  1167                                  
  1168 00000970 89C3                        mov bx, ax
  1169 00000972 8B17                        mov dx, [bx]
  1170                                  
  1171 00000974 3816[8C02]                  cmp [_m_x], dl
  1172 00000978 750B                        jne ._test_fail
  1173                                  
  1174 0000097A 5A                          pop dx
  1175 0000097B 5B                          pop bx
  1176                                  
  1177 0000097C 803E[8C02]00                cmp byte [_m_x], 0x00
  1178 00000981 740A                        je ._test_success
  1179                                  
  1180 00000983 EBDC                        jmp ._loop
  1181                                  
  1182                                  ._test_fail:
  1183 00000985 B8[680A]                    mov ax, ._s_fail_msg
  1184 00000988 E846FC                      call disp_str
  1185 0000098B EB06                        jmp ._end
  1186                                  
  1187                                  ._test_success:
  1188 0000098D B8[6D0A]                    mov ax, ._s_success_msg
  1189 00000990 E83EFC                      call disp_str
  1190                                  
  1191                                  ._end:
  1192                                  
  1193 00000993 B8[0002]                    mov ax, _s_crlf
  1194 00000996 E838FC                      call disp_str
  1195                                  
  1196 00000999 C3                      	ret
  1197                                  
  1198                                  
  1199                                  ._s_start_msg1:
  1200 0000099A 0D0A                        db 0x0d, 0x0a
  1201 0000099C 2A2A2A2A2A2A2A2A2A-         db '***********************************************', 0x0d, 0x0a
  1201 000009A5 2A2A2A2A2A2A2A2A2A-
  1201 000009AE 2A2A2A2A2A2A2A2A2A-
  1201 000009B7 2A2A2A2A2A2A2A2A2A-
  1201 000009C0 2A2A2A2A2A2A2A2A2A-
  1201 000009C9 2A2A0D0A           
  1202 000009CD 544152474554203A20-         db 'TARGET : byte_hex2mem', 0x0d, 0x0a
  1202 000009D6 627974655F68657832-
  1202 000009DF 6D656D0D0A         
  1203 000009E4 202053554343455353-         db '  SUCCESS : display "', 0x00
  1203 000009ED 203A20646973706C61-
  1203 000009F6 79202200           
  1204                                  
  1205                                  ._s_start_msg2:
  1206 000009FA 220D0A                      db '"', 0x0d, 0x0a
  1207 000009FD 2A2A2A2A2A2A2A2A2A-         db '***********************************************', 0x0d, 0x0a
  1207 00000A06 2A2A2A2A2A2A2A2A2A-
  1207 00000A0F 2A2A2A2A2A2A2A2A2A-
  1207 00000A18 2A2A2A2A2A2A2A2A2A-
  1207 00000A21 2A2A2A2A2A2A2A2A2A-
  1207 00000A2A 2A2A0D0A           
  1208 00000A2E 0D0A00                      db 0x0d, 0x0a, 0
  1209                                  
  1210                                  ._s_test_result:
  1211 00000A31 00<rep 1Eh>                 times 30 db 0
  1212                                  
  1213                                  ._s_expected_result:
  1214 00000A4F 463041303930313031-         db 'F0A090101F9AA9F10F0A0901', 0x00
  1214 00000A58 463941413946313046-
  1214 00000A61 30413039303100     
  1215                                  
  1216                                  ._s_fail_msg:
  1217 00000A68 6661696C00                  db 'fail', 0x00
  1218                                  
  1219                                  ._s_success_msg:
  1220 00000A6D 535543434553532021-         db 'SUCCESS !! ', 0x00
  1220 00000A76 212000             
  1221                                  
  1222                                      ._s_result_msg1:
  1223 00000A79 457870656374656420-         db 'Expected result : ', 0x00
  1223 00000A82 726573756C74203A20-
  1223 00000A8B 00                 
  1224                                  
  1225                                  ._s_result_msg2:
  1226 00000A8C 546573742020202020-         db 'Test     result : ', 0x00
  1226 00000A95 726573756C74203A20-
  1226 00000A9E 00                 
  1227                                  
  1228                                  
  1229                                  ;********************************
  1230                                  ; test_mem_set
  1231                                  ;       memsetのテスト
  1232                                  ; param : ax : 値をセットするエリアのアドレス
  1233                                  ;         bl : セットする値
  1234                                  ;         cx : セットするサイズ
  1235                                  ;********************************
  1236                                  test_mem_set:
  1237                                  
  1238                                      ; 開始メッセージ表示
  1239 00000A9F B8[5C0B]                    mov ax, ._s_start_msg1
  1240 00000AA2 E82CFB                      call disp_str
  1241                                  
  1242 00000AA5 B8[A60B]                    mov ax, ._s_start_msg2
  1243 00000AA8 E826FB                      call disp_str
  1244 00000AAB B8[EE0B]                    mov ax, ._s_before
  1245 00000AAE E820FB                      call disp_str
  1246 00000AB1 B8[0002]                    mov ax, _s_crlf
  1247 00000AB4 E81AFB                      call disp_str
  1248                                  
  1249 00000AB7 B8[B40B]                    mov ax, ._s_start_msg3
  1250 00000ABA E814FB                      call disp_str
  1251 00000ABD B8[070C]                    mov ax, ._s_after
  1252 00000AC0 E80EFB                      call disp_str
  1253 00000AC3 B8[0002]                    mov ax, _s_crlf
  1254 00000AC6 E808FB                      call disp_str
  1255                                  
  1256                                  
  1257 00000AC9 B8[C20B]                    mov ax, ._s_start_msg4
  1258 00000ACC E802FB                      call disp_str
  1259                                  
  1260                                      ; 実行前のエリア内容を表示
  1261 00000ACF B8[A60B]                    mov ax, ._s_start_msg2
  1262 00000AD2 E8FCFA                      call disp_str
  1263 00000AD5 BB[3F0C]                    mov bx, ._m_test_area
  1264 00000AD8 B9[3F0C]                    mov cx, ._m_test_area
  1265 00000ADB A1[200C]                    mov ax,  [._b_area_size] 
  1266 00000ADE B400                        mov ah, 0
  1267 00000AE0 01C1                        add cx, ax
  1268                                  ._before_loop:
  1269 00000AE2 8B17                        mov dx, [bx]
  1270 00000AE4 88D0                        mov al, dl
  1271 00000AE6 E867FA                      call disp_byte_hex
  1272 00000AE9 83C301                      add bx, 1
  1273                                  
  1274 00000AEC 39CB                        cmp bx, cx
  1275 00000AEE 76F2                        jbe ._before_loop
  1276                                  
  1277 00000AF0 B8[0002]                    mov ax, _s_crlf
  1278 00000AF3 E8DBFA                      call disp_str
  1279                                  
  1280                                      ; 実行
  1281 00000AF6 B8[3F0C]                    mov ax, ._m_test_area
  1282 00000AF9 B300                        mov bl, 0
  1283                                      ;mov cx, _siz[._b_area_size]
  1284 00000AFB B90B00                      mov cx, ._size
  1285 00000AFE E8E2FA                      call mem_set
  1286                                  
  1287                                      ; 実行後のエリア内容を表示
  1288 00000B01 B8[B40B]                    mov ax, ._s_start_msg3
  1289 00000B04 E8CAFA                      call disp_str
  1290 00000B07 BB[3F0C]                    mov bx, ._m_test_area
  1291 00000B0A B9[3F0C]                    mov cx, ._m_test_area
  1292                                      ;mov ax,  [._b_area_size]
  1293 00000B0D B80B00                      mov ax,  ._size
  1294 00000B10 B400                        mov ah, 0
  1295 00000B12 01C1                        add cx, ax
  1296                                  ._after_loop:
  1297 00000B14 8B17                        mov dx, [bx]
  1298 00000B16 88D0                        mov al, dl
  1299 00000B18 E835FA                      call disp_byte_hex
  1300 00000B1B 83C301                      add bx, 1
  1301                                  
  1302 00000B1E 39CB                        cmp bx, cx
  1303 00000B20 76F2                        jbe ._after_loop
  1304                                  
  1305                                  
  1306                                  
  1307                                      ; 結果の確認
  1308                                  
  1309 00000B22 B8[320C]                    mov ax, ._m_expected_result
  1310 00000B25 BB[3F0C]                    mov bx, ._m_test_area
  1311 00000B28 B90B00                      mov cx, ._size
  1312 00000B2B E80EFB                      call mem_cmp
  1313 00000B2E 80FA00                      cmp dl, 0x00
  1314 00000B31 7502                        jne ._test_fail
  1315                                  
  1316                                  
  1317 00000B33 EB11                        jmp ._test_success
  1318                                  
  1319                                  
  1320                                  ._test_fail:
  1321 00000B35 B8[0002]                    mov ax, _s_crlf
  1322 00000B38 E896FA                      call disp_str
  1323 00000B3B E893FA                      call disp_str
  1324                                  
  1325 00000B3E B8[210C]                    mov ax, ._s_fail_msg
  1326 00000B41 E88DFA                      call disp_str
  1327 00000B44 EB0F                        jmp ._end
  1328                                  
  1329                                  ._test_success:
  1330 00000B46 B8[0002]                    mov ax, _s_crlf
  1331 00000B49 E885FA                      call disp_str
  1332 00000B4C E882FA                      call disp_str
  1333                                  
  1334 00000B4F B8[260C]                    mov ax, ._s_success_msg
  1335 00000B52 E87CFA                      call disp_str
  1336                                  
  1337                                  ._end:
  1338                                  
  1339 00000B55 B8[0002]                    mov ax, _s_crlf
  1340 00000B58 E876FA                      call disp_str
  1341                                  
  1342 00000B5B C3                      	ret
  1343                                  
  1344                                  ._s_start_msg1:
  1345 00000B5C 0D0A                        db 0x0d, 0x0a
  1346 00000B5E 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1346 00000B67 2A2A2A2A2A2A2A2A2A-
  1346 00000B70 2A2A2A2A2A2A2A2A2A-
  1346 00000B79 2A2A2A2A2A2A2A2A2A-
  1346 00000B82 2A2A2A0D0A         
  1347 00000B87 544152474554203A20-         db 'TARGET : memset', 0x0d, 0x0a
  1347 00000B90 6D656D7365740D0A   
  1348 00000B98 202053554343455353-         db '  SUCCESS  ', 0x0d, 0x0a, 0x00
  1348 00000BA1 20200D0A00         
  1349                                  
  1350                                  ._s_start_msg2:
  1351 00000BA6 202020206265666F72-         db '    before : ', 0x00
  1351 00000BAF 65203A2000         
  1352                                  
  1353                                  ._s_start_msg3:
  1354 00000BB4 202020206166746572-         db '    after  : ', 0x00
  1354 00000BBD 20203A2000         
  1355                                  
  1356                                  ._s_start_msg4:
  1357 00000BC2 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1357 00000BCB 2A2A2A2A2A2A2A2A2A-
  1357 00000BD4 2A2A2A2A2A2A2A2A2A-
  1357 00000BDD 2A2A2A2A2A2A2A2A2A-
  1357 00000BE6 2A2A2A0D0A         
  1358 00000BEB 0D0A00                      db 0x0d, 0x0a, 0
  1359                                  
  1360 00000BEE 303130323033303430-     ._s_before: db '0102030405060708090A0B0C', 0x00
  1360 00000BF7 353036303730383039-
  1360 00000C00 30413042304300     
  1361 00000C07 303030303030303030-     ._s_after: db  '00000000000000000000000C', 0x00
  1361 00000C10 303030303030303030-
  1361 00000C19 30303030304300     
  1362                                  
  1363 00000C20 0B                      ._b_area_size: db 11
  1364                                  
  1365                                  ._s_fail_msg:
  1366 00000C21 6661696C00                  db 'fail', 0x00
  1367                                  
  1368                                  ._s_success_msg:
  1369 00000C26 535543434553532021-         db 'SUCCESS !! ', 0x00
  1369 00000C2F 212000             
  1370                                  
  1371                                  ._size equ 11 
  1372                                  
  1373 00000C32 00<rep Bh>              ._m_expected_result: times 11 db 0x00
  1374 00000C3D 0C00                    		db 0x0c, 0x00
  1375                                  
  1376 00000C3F 010203040506070809-     ._m_test_area: db 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x00
  1376 00000C48 0A0B0C00           
  1377                                  
  1378                                  
  1379                                  ;********************************
  1380                                  ; test_memcpy
  1381                                  ;       memcpyのテスト
  1382                                  ; param : ax : コピー先のアドレス
  1383                                  ;         bx : コピー元のアドレス
  1384                                  ;         cx : こぷーするサイズ
  1385                                  ;********************************
  1386                                  test_mem_cpy:
  1387                                  
  1388                                  
  1389                                      ; 開始メッセージ表示
  1390 00000C4C B8[450D]                    mov ax, ._s_start_msg1
  1391 00000C4F E87FF9                      call disp_str
  1392                                  
  1393 00000C52 B8[900D]                    mov ax, ._s_start_msg2
  1394 00000C55 E879F9                      call disp_str
  1395 00000C58 B8[E60D]                    mov ax, ._s_source
  1396 00000C5B E873F9                      call disp_str
  1397 00000C5E B8[0002]                    mov ax, _s_crlf
  1398 00000C61 E86DF9                      call disp_str
  1399                                  
  1400 00000C64 B8[9E0D]                    mov ax, ._s_start_msg3
  1401 00000C67 E867F9                      call disp_str
  1402 00000C6A B8[FF0D]                    mov ax, ._s_before
  1403 00000C6D E861F9                      call disp_str
  1404 00000C70 B8[0002]                    mov ax, _s_crlf
  1405 00000C73 E85BF9                      call disp_str
  1406                                  
  1407 00000C76 B8[AC0D]                    mov ax, ._s_start_msg4
  1408 00000C79 E855F9                      call disp_str
  1409 00000C7C B8[180E]                    mov ax, ._s_after
  1410 00000C7F E84FF9                      call disp_str
  1411 00000C82 B8[0002]                    mov ax, _s_crlf
  1412 00000C85 E849F9                      call disp_str
  1413                                  
  1414 00000C88 B8[BA0D]                    mov ax, ._s_start_msg5
  1415 00000C8B E843F9                      call disp_str
  1416                                  
  1417                                  
  1418                                  
  1419                                      ;コピー元のエリア内容を表示
  1420 00000C8E B8[900D]                    mov ax, ._s_start_msg2
  1421 00000C91 E83DF9                      call disp_str
  1422 00000C94 BB[510E]                    mov bx, ._m_source
  1423 00000C97 B9[510E]                    mov cx, ._m_source
  1424 00000C9A A1[310E]                    mov ax,  [._w_area_size]
  1425 00000C9D 01C1                        add cx, ax
  1426                                  ._source_loop:
  1427 00000C9F 8B17                        mov dx, [bx]
  1428 00000CA1 88D0                        mov al, dl
  1429 00000CA3 E8AAF8                      call disp_byte_hex
  1430 00000CA6 83C301                      add bx, 1
  1431                                  
  1432 00000CA9 39CB                        cmp bx, cx
  1433 00000CAB 76F2                        jbe ._source_loop
  1434                                  
  1435 00000CAD B8[0002]                    mov ax, _s_crlf
  1436 00000CB0 E81EF9                      call disp_str
  1437                                  
  1438                                  
  1439                                      ; 実行前のエリア内容を表示
  1440 00000CB3 B8[9E0D]                    mov ax, ._s_start_msg3
  1441 00000CB6 E818F9                      call disp_str
  1442 00000CB9 BB[5E0E]                    mov bx, ._m_test_area
  1443 00000CBC B9[5E0E]                    mov cx, ._m_test_area
  1444 00000CBF A1[310E]                    mov ax,  [._w_area_size]
  1445 00000CC2 01C1                        add cx, ax
  1446                                  ._before_loop:
  1447 00000CC4 8B17                        mov dx, [bx]
  1448 00000CC6 88D0                        mov al, dl
  1449 00000CC8 E885F8                      call disp_byte_hex
  1450 00000CCB 83C301                      add bx, 1
  1451                                  
  1452 00000CCE 39CB                        cmp bx, cx
  1453 00000CD0 76F2                        jbe ._before_loop
  1454                                  
  1455 00000CD2 B8[0002]                    mov ax, _s_crlf
  1456 00000CD5 E8F9F8                      call disp_str
  1457                                  
  1458                                  
  1459                                      ; 実行
  1460 00000CD8 A1[310E]                mov ax, [._w_area_size]
  1461 00000CDB B400                        mov ah, 0
  1462 00000CDD 89C1                        mov cx, ax
  1463 00000CDF B8[5E0E]                    mov ax, ._m_test_area
  1464 00000CE2 BB[510E]                    mov bx, ._m_source
  1465 00000CE5 E821F9                      call mem_cpy
  1466                                  
  1467                                  
  1468                                      ; 実行後のエリア内容を表示
  1469 00000CE8 B8[AC0D]                    mov ax, ._s_start_msg4
  1470 00000CEB E8E3F8                      call disp_str
  1471 00000CEE BB[5E0E]                    mov bx, ._m_test_area
  1472 00000CF1 B9[5E0E]                    mov cx, ._m_test_area
  1473 00000CF4 A1[310E]                    mov ax,  [._w_area_size]
  1474 00000CF7 01C1                        add cx, ax
  1475                                  ._after_loop:
  1476 00000CF9 8B17                        mov dx, [bx]
  1477 00000CFB 88D0                        mov al, dl
  1478 00000CFD E850F8                      call disp_byte_hex
  1479 00000D00 83C301                      add bx, 1
  1480                                  
  1481 00000D03 39CB                        cmp bx, cx
  1482 00000D05 76F2                        jbe ._after_loop
  1483                                  
  1484 00000D07 B8[0002]                    mov ax, _s_crlf
  1485 00000D0A E8C4F8                      call disp_str
  1486                                  
  1487                                  
  1488                                      ; 結果の確認
  1489 00000D0D B8[440E]                    mov ax, ._m_expected_result
  1490 00000D10 BB[5E0E]                    mov bx, ._m_test_area
  1491 00000D13 8B0E[310E]                  mov cx,  [._w_area_size]
  1492 00000D17 E822F9                      call mem_cmp
  1493 00000D1A 7502                        jne ._test_fail
  1494                                  
  1495 00000D1C EB11                        jmp ._test_success
  1496                                  
  1497                                  
  1498                                  ._test_fail:
  1499                                  
  1500 00000D1E B8[0002]                    mov ax, _s_crlf
  1501 00000D21 E8ADF8                      call disp_str
  1502 00000D24 E8AAF8                      call disp_str
  1503                                  
  1504 00000D27 B8[330E]                    mov ax, ._s_fail_msg
  1505 00000D2A E8A4F8                      call disp_str
  1506 00000D2D EB0F                        jmp ._end
  1507                                  
  1508                                  ._test_success:
  1509 00000D2F B8[0002]                    mov ax, _s_crlf
  1510 00000D32 E89CF8                      call disp_str
  1511 00000D35 E899F8                      call disp_str
  1512                                  
  1513 00000D38 B8[380E]                    mov ax, ._s_success_msg
  1514 00000D3B E893F8                      call disp_str
  1515                                  
  1516                                  ._end:
  1517                                  
  1518 00000D3E B8[0002]                    mov ax, _s_crlf
  1519 00000D41 E88DF8                      call disp_str
  1520                                  
  1521                                  
  1522 00000D44 C3                          ret
  1523                                  
  1524                                  
  1525                                  ._s_start_msg1:
  1526 00000D45 0D0A                        db 0x0d, 0x0a
  1527 00000D47 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1527 00000D50 2A2A2A2A2A2A2A2A2A-
  1527 00000D59 2A2A2A2A2A2A2A2A2A-
  1527 00000D62 2A2A2A2A2A2A2A2A2A-
  1527 00000D6B 2A2A2A0D0A         
  1528 00000D70 544152474554203A20-         db 'TARGET : mem_cpy', 0x0d, 0x0a
  1528 00000D79 6D656D5F6370790D0A 
  1529 00000D82 202053554343455353-         db '  SUCCESS  ', 0x0d, 0x0a, 0x00
  1529 00000D8B 20200D0A00         
  1530                                  
  1531                                  ._s_start_msg2:
  1532 00000D90 20202020736F757263-         db '    source : ', 0x00
  1532 00000D99 65203A2000         
  1533                                  
  1534                                  
  1535                                  ._s_start_msg3:
  1536 00000D9E 202020206265666F72-         db '    before : ', 0x00
  1536 00000DA7 65203A2000         
  1537                                  
  1538                                  ._s_start_msg4:
  1539 00000DAC 202020206166746572-         db '    after  : ', 0x00
  1539 00000DB5 20203A2000         
  1540                                  
  1541                                  ._s_start_msg5:
  1542 00000DBA 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1542 00000DC3 2A2A2A2A2A2A2A2A2A-
  1542 00000DCC 2A2A2A2A2A2A2A2A2A-
  1542 00000DD5 2A2A2A2A2A2A2A2A2A-
  1542 00000DDE 2A2A2A0D0A         
  1543 00000DE3 0D0A00                      db 0x0d, 0x0a, 0
  1544                                  
  1545 00000DE6 304330423041303930-     ._s_source: db '0C0B0A090807060504030201', 0x00
  1545 00000DEF 383037303630353034-
  1545 00000DF8 30333032303100     
  1546 00000DFF 303130323033303430-     ._s_before: db '0102030405060708090A0B0C', 0x00
  1546 00000E08 353036303730383039-
  1546 00000E11 30413042304300     
  1547 00000E18 304330423041303930-     ._s_after:  db '0C0B0A09080706050403020C', 0x00
  1547 00000E21 383037303630353034-
  1547 00000E2A 30333032304300     
  1548                                  
  1549 00000E31 0B00                    ._w_area_size: db 11,0  
  1550                                  
  1551                                  ._s_fail_msg:
  1552 00000E33 6661696C00                  db 'fail', 0x00
  1553                                  
  1554                                  ._s_success_msg:
  1555 00000E38 535543434553532021-         db 'SUCCESS !! ', 0x00
  1555 00000E41 212000             
  1556                                  
  1557 00000E44 0C0B0A090807060504-     ._m_expected_result:    db 0x0C, 0x0B, 0x0A, 0x09, 0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x0C, 0x00
  1557 00000E4D 03020C00           
  1558                                  
  1559 00000E51 0C0B0A090807060504-     ._m_source:    db 0x0C, 0x0B, 0x0A, 0x09, 0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00
  1559 00000E5A 03020100           
  1560                                  
  1561 00000E5E 010203040506070809-     ._m_test_area: db 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x00
  1561 00000E67 0A0B0C00           
  1562                                  
  1563                                  
  1564                                  ;********************************
  1565                                  ; test_mem_cmp
  1566                                  ;       memcmpのテスト
  1567                                  ; param : ax : 比較先のアドレス
  1568                                  ;         bx : 比較元のアドレス
  1569                                  ;         cx : 比較するサイズ
  1570                                  ;********************************
  1571                                  test_mem_cmp:
  1572 00000E6B B200                    	mov dl, 0
  1573                                  
  1574                                      ; 開始メッセージ表示
  1575 00000E6D B8[060F]                    mov ax, ._s_start_msg1
  1576 00000E70 E85EF7                      call disp_str
  1577                                  
  1578 00000E73 B8[440F]                    mov ax, ._s_start_msg2
  1579 00000E76 E858F7                      call disp_str
  1580 00000E79 B8[9E0F]                    mov ax, ._s_destination
  1581 00000E7C E852F7                      call disp_str
  1582 00000E7F B8[0002]                    mov ax, _s_crlf
  1583 00000E82 E84CF7                      call disp_str
  1584                                  
  1585 00000E85 B8[4F0F]                    mov ax, ._s_start_msg3
  1586 00000E88 E846F7                      call disp_str
  1587 00000E8B B8[910F]                    mov ax, ._s_source
  1588 00000E8E E840F7                      call disp_str
  1589 00000E91 B8[0002]                    mov ax, _s_crlf
  1590 00000E94 E83AF7                      call disp_str
  1591                                  
  1592 00000E97 B8[5A0F]                    mov ax, ._s_start_msg4
  1593 00000E9A E834F7                      call disp_str
  1594 00000E9D B8[AE0F]                    mov ax, ._s_result
  1595 00000EA0 E82EF7                      call disp_str
  1596 00000EA3 B8[0002]                    mov ax, _s_crlf
  1597 00000EA6 E828F7                      call disp_str
  1598                                  
  1599 00000EA9 B8[650F]                    mov ax, ._s_start_msg5
  1600 00000EAC E822F7                      call disp_str
  1601                                  
  1602                                  
  1603                                      ; テスト実行
  1604                                      ; ケース１
  1605 00000EAF B8[B50F]                    mov ax, ._s_size
  1606 00000EB2 E81CF7                      call disp_str
  1607                                  
  1608 00000EB5 B8[910F]                    mov ax, ._s_source
  1609 00000EB8 BB[9E0F]                    mov bx, ._s_destination
  1610 00000EBB 8B0E[C80F]                  mov cx, [._w_case1]
  1611                                  
  1612 00000EBF 50                          push ax
  1613 00000EC0 88C8                        mov al, cl
  1614 00000EC2 E88BF6                      call disp_byte_hex
  1615 00000EC5 58                          pop ax
  1616                                  
  1617 00000EC6 E873F7                      call mem_cmp
  1618                                  
  1619 00000EC9 B8[BD0F]                    mov ax, ._s_return
  1620 00000ECC E802F7                      call disp_str
  1621 00000ECF 88D0                        mov al, dl
  1622 00000ED1 E87CF6                      call disp_byte_hex
  1623 00000ED4 B8[0002]                    mov ax, _s_crlf
  1624 00000ED7 E8F7F6                      call disp_str
  1625                                  
  1626                                      ; ケース２
  1627 00000EDA B8[B50F]                    mov ax, ._s_size
  1628 00000EDD E8F1F6                      call disp_str
  1629                                  
  1630 00000EE0 B8[910F]                    mov ax, ._s_source
  1631 00000EE3 BB[9E0F]                    mov bx, ._s_destination
  1632 00000EE6 8B0E[CA0F]                  mov cx, [._w_case2]
  1633                                  
  1634 00000EEA 50                          push ax
  1635 00000EEB 88C8                        mov al, cl
  1636 00000EED E860F6                      call disp_byte_hex
  1637 00000EF0 58                          pop ax
  1638                                  
  1639 00000EF1 E848F7                      call mem_cmp
  1640                                  
  1641 00000EF4 B8[BD0F]                    mov ax, ._s_return
  1642 00000EF7 E8D7F6                      call disp_str
  1643 00000EFA 88D0                        mov al, dl
  1644 00000EFC E851F6                      call disp_byte_hex
  1645 00000EFF B8[0002]                    mov ax, _s_crlf
  1646 00000F02 E8CCF6                      call disp_str
  1647                                  
  1648 00000F05 C3                      	ret
  1649                                  
  1650                                  
  1651                                  ._s_start_msg1:
  1652 00000F06 0D0A                        db 0x0d, 0x0a
  1653 00000F08 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1653 00000F11 2A2A2A2A2A2A2A2A2A-
  1653 00000F1A 2A2A2A2A2A2A2A2A2A-
  1653 00000F23 2A2A2A2A2A2A2A2A2A-
  1653 00000F2C 2A2A2A0D0A         
  1654 00000F31 544152474554203A20-         db 'TARGET : mem_cmp', 0x0d, 0x0a, 0x00
  1654 00000F3A 6D656D5F636D700D0A-
  1654 00000F43 00                 
  1655                                  
  1656                                  ._s_start_msg2:
  1657 00000F44 20202020647374203A-         db '    dst : ', 0x00
  1657 00000F4D 2000               
  1658                                  
  1659                                  
  1660                                  ._s_start_msg3:
  1661 00000F4F 20202020737263203A-         db '    src : ', 0x00
  1661 00000F58 2000               
  1662                                  
  1663                                  ._s_start_msg4:
  1664 00000F5A 20202020726574203A-         db '    ret : ', 0x00
  1664 00000F63 2000               
  1665                                  
  1666                                  ._s_start_msg5:
  1667 00000F65 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1667 00000F6E 2A2A2A2A2A2A2A2A2A-
  1667 00000F77 2A2A2A2A2A2A2A2A2A-
  1667 00000F80 2A2A2A2A2A2A2A2A2A-
  1667 00000F89 2A2A2A0D0A         
  1668 00000F8E 0D0A00                      db 0x0d, 0x0a, 0
  1669                                  
  1670 00000F91 48656C6C6F20576F72-     ._s_source     : db 'Hello World!', 0x00
  1670 00000F9A 6C642100           
  1671 00000F9E 48656C6C6F20556E69-     ._s_destination: db 'Hello Universe!', 0x00
  1671 00000FA7 76657273652100     
  1672 00000FAE 31206F72203000          ._s_result     : db '1 or 0', 0x00
  1673 00000FB5 53697A65203A2000        ._s_size: db 'Size : ', 00
  1674 00000FBD 2072657475726E203A-     ._s_return: db ' return : ', 00
  1674 00000FC6 2000               
  1675                                  
  1676 00000FC8 0600                    ._w_case1: db 6,0
  1677 00000FCA 0800                    ._w_case2: db 8,0
  1678                                  
  1679                                  
  1680                                  ;********************************
  1681                                  ; test_mem_dsp
  1682                                  ;       mem_dspのテスト
  1683                                  ; param : ax : 表示する領域のアドレス
  1684                                  ;         bx : 表示するサイズ
  1685                                  ;********************************
  1686                                  test_mem_dsp:
  1687                                  
  1688                                      ; 開始メッセージ表示
  1689 00000FCC B8[1210]                    mov ax, ._s_start_msg1
  1690 00000FCF E8FFF5                      call disp_str
  1691                                  
  1692 00000FD2 B8[5010]                    mov ax, ._s_start_msg2
  1693 00000FD5 E8F9F5                      call disp_str
  1694                                  
  1695 00000FD8 B8[9810]                    mov ax, ._s_source
  1696 00000FDB BB0C00                      mov bx, 12
  1697 00000FDE E891F6                      call mem_dsp
  1698 00000FE1 B8[0002]                    mov ax, _s_crlf
  1699 00000FE4 E8EAF5                      call disp_str
  1700                                  
  1701 00000FE7 B8[5E10]                    mov ax, ._s_start_msg3
  1702 00000FEA E8E4F5                      call disp_str
  1703 00000FED 8B1E[A310]                  mov word bx, [._w_disp_size]
  1704 00000FF1 89D8                        mov ax, bx
  1705 00000FF3 E8A9F5                      call disp_word_hex
  1706 00000FF6 B8[0002]                    mov ax, _s_crlf
  1707 00000FF9 E8D5F5                      call disp_str
  1708                                  
  1709 00000FFC B8[6C10]                    mov ax, ._s_start_msg4
  1710 00000FFF E8CFF5                      call disp_str
  1711                                  
  1712                                      ; テスト実行
  1713 00001002 B8[9810]                    mov ax, ._s_source
  1714 00001005 BB0700                      mov bx, 7
  1715 00001008 E867F6                      call mem_dsp
  1716                                  
  1717 0000100B B8[0002]                    mov ax, _s_crlf
  1718 0000100E E8C0F5                      call disp_str
  1719                                  
  1720 00001011 C3                          ret
  1721                                  
  1722                                  
  1723                                  ._s_start_msg1:
  1724 00001012 0D0A                        db 0x0d, 0x0a
  1725 00001014 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1725 0000101D 2A2A2A2A2A2A2A2A2A-
  1725 00001026 2A2A2A2A2A2A2A2A2A-
  1725 0000102F 2A2A2A2A2A2A2A2A2A-
  1725 00001038 2A2A2A0D0A         
  1726 0000103D 544152474554203A20-         db 'TARGET : mem_dsp', 0x0d, 0x0a, 0x00
  1726 00001046 6D656D5F6473700D0A-
  1726 0000104F 00                 
  1727                                  
  1728                                  ._s_start_msg2:
  1729 00001050 20202020736F757263-         db '    source : ', 0x00
  1729 00001059 65203A2000         
  1730                                  
  1731                                  
  1732                                  ._s_start_msg3:
  1733 0000105E 2020202073697A6520-         db '    size   : ', 0x00
  1733 00001067 20203A2000         
  1734                                  
  1735                                  ._s_start_msg4:
  1736 0000106C 2A2A2A2A2A2A2A2A2A-         db '***************************************', 0x0d, 0x0a
  1736 00001075 2A2A2A2A2A2A2A2A2A-
  1736 0000107E 2A2A2A2A2A2A2A2A2A-
  1736 00001087 2A2A2A2A2A2A2A2A2A-
  1736 00001090 2A2A2A0D0A         
  1737 00001095 0D0A00                      db 0x0d, 0x0a, 0
  1738                                  
  1739 00001098 010203040506070809-     ._s_source:    db 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x00
  1739 000010A1 0A00               
  1740                                  
  1741 000010A3 0700                    ._w_disp_size: db 7, 0
  1742                                  
  1743                                  
  1744                                  ;********************************
  1745                                  ; test_get_key
  1746                                  ;       getkeyのテスト
  1747                                  ; param : なし
  1748                                  ; retuen: ah : キーコード
  1749                                  ;         al : アスキーコード
  1750                                  ;********************************
  1751                                  test_get_key:
  1752                                  
  1753 000010A5 B3FF                        mov bl, 0xff
  1754 000010A7 C0E304                      sal bl, 4
  1755 000010AA 88D8                        mov al, bl
  1756 000010AC E8A1F4                      call disp_byte_hex
  1757                                  
  1758 000010AF E973EF                      jmp _hlt
  1759                                  	
  1760                                  	
  1761 000010B2 B8[DE10]                    mov ax, ._msg1
  1762 000010B5 E819F5                      call disp_str
  1763                                  
  1764 000010B8 E8E4F5                      call get_key
  1765                                  
  1766 000010BB B8[2C11]                    mov ax, ._msg2
  1767 000010BE E810F5                      call disp_str
  1768                                  
  1769 000010C1 88F8                        mov al, bh
  1770 000010C3 E88AF4                      call disp_byte_hex
  1771 000010C6 B8[0002]                    mov ax, _s_crlf
  1772 000010C9 E805F5                      call disp_str
  1773                                  
  1774 000010CC B8[3A11]                    mov ax, ._msg3
  1775 000010CF E8FFF4                      call disp_str
  1776                                  
  1777 000010D2 88D8                        mov al, bl
  1778 000010D4 E879F4                      call disp_byte_hex
  1779 000010D7 B8[0002]                    mov ax, _s_crlf
  1780 000010DA E8F4F4                      call disp_str
  1781                                  
  1782 000010DD C3                          ret
  1783                                  
  1784                                  ._msg1:
  1785 000010DE 2A2A2A2A2A2A2A2A2A-         db '*****************************', 0x0d, 0x0a
  1785 000010E7 2A2A2A2A2A2A2A2A2A-
  1785 000010F0 2A2A2A2A2A2A2A2A2A-
  1785 000010F9 2A2A0D0A           
  1786 000010FD 2020206765745F6B65-         db '   get_key ', 0x0d, 0x0a
  1786 00001106 79200D0A           
  1787 0000110A 2A2A2A2A2A2A2A2A2A-         db '*****************************', 0x0d, 0x0a
  1787 00001113 2A2A2A2A2A2A2A2A2A-
  1787 0000111C 2A2A2A2A2A2A2A2A2A-
  1787 00001125 2A2A0D0A           
  1788 00001129 0D0A00                      db 0x0d, 0x0a, 0x00
  1789                                  
  1790                                  ._msg2:
  1791 0000112C 6B657920636F646520-         db 'key code   : ', 0x00
  1791 00001135 20203A2000         
  1792                                  
  1793                                  ._msg3:
  1794 0000113A 617363696920646F63-         db 'ascii doce : ', 0x00
  1794 00001143 65203A2000         
  1795                                  
  1796                                  
  1797                                  ;********************************
  1798                                  ; test_disp_dec
  1799                                  ;      disp_decのテスト
  1800                                  ; param  : ax : 表示する数値
  1801                                  ;********************************
  1802                                  test_disp_dec:
  1803                                  
  1804                                      ; 開始メッセージ表示
  1805 00001148 B8[9411]                    mov ax, ._start_msg
  1806 0000114B E883F4                      call disp_str
  1807                                  
  1808                                      ; テスト実行
  1809 0000114E B80000                      mov ax, 0 
  1810 00001151 E80EF4                      call disp_dec
  1811                                  
  1812 00001154 B80A00                      mov ax, 10 
  1813 00001157 E808F4                      call disp_dec
  1814                                  
  1815 0000115A B80F00                      mov ax, 0xf 
  1816 0000115D E802F4                      call disp_dec
  1817                                  
  1818 00001160 B81000                      mov ax, 0x10 
  1819 00001163 E8FCF3                      call disp_dec
  1820                                  
  1821 00001166 B8FF00                      mov ax, 0xff 
  1822 00001169 E8F6F3                      call disp_dec
  1823                                  
  1824 0000116C B80001                      mov ax, 0x100 
  1825 0000116F E8F0F3                      call disp_dec
  1826                                  
  1827 00001172 B8FF0F                      mov ax, 0xfff 
  1828 00001175 E8EAF3                      call disp_dec
  1829                                  
  1830 00001178 B80010                      mov ax, 0x1000 
  1831 0000117B E8E4F3                      call disp_dec
  1832                                  
  1833 0000117E B8FFFF                      mov ax, 0xffff 
  1834 00001181 E8DEF3                      call disp_dec
  1835                                  
  1836 00001184 B80B00                      mov ax, 11 
  1837 00001187 E8D8F3                      call disp_dec
  1838                                  
  1839 0000118A B84C04                      mov ax, 1100 
  1840 0000118D E8D2F3                      call disp_dec
  1841                                  
  1842                                      ; 改行の調整
  1843 00001190 B8[0002]                    mov ax, _s_crlf
  1844                                  
  1845 00001193 C3                      ret
  1846                                  
  1847                                  
  1848                                  ._start_msg:
  1849 00001194 0D0A                        db 0x0d, 0x0a
  1850 00001196 2A2A2A2A2A2A2A2A2A-         db '****************************', 0x0d, 0x0a
  1850 0000119F 2A2A2A2A2A2A2A2A2A-
  1850 000011A8 2A2A2A2A2A2A2A2A2A-
  1850 000011B1 2A0D0A             
  1851 000011B4 544152474554203A20-         db 'TARGET : disp_dec ', 0x0d, 0x0a
  1851 000011BD 646973705F64656320-
  1851 000011C6 0D0A               
  1852 000011C8 202053554343455353-         db '  SUCCESS : display 0, 10, 15, 16, 255, 256, 4095, 4096, 65535, 11, 1100', 0x0d, 0x0a
  1852 000011D1 203A20646973706C61-
  1852 000011DA 7920302C2031302C20-
  1852 000011E3 31352C2031362C2032-
  1852 000011EC 35352C203235362C20-
  1852 000011F5 343039352C20343039-
  1852 000011FE 362C2036353533352C-
  1852 00001207 2031312C2031313030-
  1852 00001210 0D0A               
  1853 00001212 2A2A2A2A2A2A2A2A2A-         db '****************************', 0x0d, 0x0a
  1853 0000121B 2A2A2A2A2A2A2A2A2A-
  1853 00001224 2A2A2A2A2A2A2A2A2A-
  1853 0000122D 2A0D0A             
  1854 00001230 0D0A00                      db 0x0d, 0x0a, 0
  1855                                  
  1856                                  
  1857                                  ._test_data:
  1858 00001233 545255450D0A46414C-         db 'TRUE', 0x0d, 0x0a, 'FALSE',  0x00, 'FALSE', 0x0d, 0x0a, 'TRUE', 0x00 
  1858 0000123C 53450046414C53450D-
  1858 00001245 0A5452554500       
  1859                                  
  1860                                  
  1861                                  ;>>===========================
  1862                                  ;>> 一括テスト
  1863                                  ;>>===========================
  1864                                  test_all:
  1865                                  
  1866                                      ; テスト開始メッセージの表示
  1867 0000124B B8[6D12]                	mov ax, ._start_msg
  1868 0000124E E880F3                      call disp_str
  1869                                  
  1870                                  
  1871                                      ; disp_decのテスト
  1872 00001251 E8F4FE                      call test_disp_dec
  1873                                  
  1874                                      ; disp_strのテスト
  1875 00001254 E8AFF4                      call test_disp_str
  1876                                  
  1877                                      ; disp_byte_hexのテスト
  1878 00001257 E86DF5                      call test_disp_byte_hex
  1879                                  
  1880                                      ; byte_hex_memのテスト
  1881 0000125A E862F6                      call test_byte_hex_mem
  1882                                  
  1883                                      ; mem_setのテスト
  1884 0000125D E83FF8                      call test_mem_set
  1885                                  
  1886                                      ; mem_cpyのテスト
  1887 00001260 E8E9F9                      call test_mem_cpy
  1888                                  
  1889                                      ; mem_dspのテスト
  1890 00001263 E866FD                      call test_mem_dsp
  1891                                  
  1892                                      ; mem_cmpのテスト
  1893 00001266 E802FC                      call test_mem_cmp
  1894                                  
  1895 00001269 E9B9ED                      jmp _hlt
  1896                                  
  1897                                  
  1898                                  ._end:
  1899                                  
  1900 0000126C C3                          ret
  1901                                  
  1902                                  ._start_msg:
  1903 0000126D 0D0A0D0A                    db 0x0d, 0x0a, 0x0d, 0x0a
  1904 00001271 232323232323232323-         db '########################', 0x0d, 0x0a
  1904 0000127A 232323232323232323-
  1904 00001283 2323232323230D0A   
  1905 0000128B 43757272656E746C79-         db 'Currently in test mode.', 0x0d, 0x0a
  1905 00001294 20696E207465737420-
  1905 0000129D 6D6F64652E0D0A     
  1906 000012A4 546573742069732073-         db 'Test is started', 0x0d, 0x0a
  1906 000012AD 7461727465640D0A   
  1907 000012B5 232323232323232323-         db '########################', 0x0d, 0x0a
  1907 000012BE 232323232323232323-
  1907 000012C7 2323232323230D0A   
  1908 000012CF 0D0A00                      db 0x0d, 0x0a, 0
  1909                                  
  1910                                  ;********************************
  1911                                  ; debug_print
  1912                                  ;********************************
  1913                                  debug_print:
  1914                                  
  1915 000012D2 50                          push ax
  1916 000012D3 53                          push bx
  1917                                  
  1918                                  
  1919 000012D4 B8[DD12]                    mov ax, ._s_debug
  1920 000012D7 E8F7F2                      call disp_str
  1921                                  
  1922 000012DA 5B                          pop bx
  1923 000012DB 58                          pop ax
  1924                                  
  1925                                  
  1926 000012DC C3                          ret
  1927                                  
  1928                                  
  1929                                  ._s_debug:
  1930 000012DD 49204841564520434F-         db 'I HAVE COME THIS FAR. by Sun Wukong.', 0x0d, 0x0a, 0
  1930 000012E6 4D4520544849532046-
  1930 000012EF 41522E206279205375-
  1930 000012F8 6E2057756B6F6E672E-
  1930 00001301 0D0A00             
  1931                                  
  1932                                  
  1933                                  ;>>===========================
  1934                                  ;>> main
  1935                                  ;>>===========================
  1936                                  
  1937                                  main:
  1938                                      ; set segment register
  1939 00001304 B8C007                      mov ax, _c_seg
  1940 00001307 8ED8                        mov ds, ax
  1941                                  
  1942                                      ; テストモードならテストを実行して終了
  1943 00001309 803E[2800]31                cmp byte [_m_isTest], _c_true
  1944 0000130E 7506                        jne ._skip_test
  1945 00001310 E838FF                      call test_all
  1946 00001313 E90FED                      jmp _hlt
  1947                                  
  1948                                  ._skip_test:
  1949                                  
  1950                                      ; ビデオモードの設定
  1951 00001316 B400                        mov ah, 0x0
  1952 00001318 B003                        mov al, 0x3    ; 16色テキスト、80x25
  1953                                      ; mov al, 0x6a  ; 800x600x4bitカラー（ビデオカードによってはサポートされない）
  1954 0000131A CD10                        int 0x10
  1955                                  
  1956                                      ; 念のため初期化
  1957 0000131C FC                          cld
  1958                                  
  1959                                  ._loop:
  1960                                  
  1961                                  ;    call get_key_st
  1962                                  ;    mov bx, ax
  1963                                  ;    mov ax, ._header1
  1964                                  ;    call disp_str
  1965                                  ;    mov al, bl
  1966                                  ;    call disp_byte_hex
  1967                                  ;    mov ax, _s_crlf
  1968                                  ;    call disp_str
  1969                                  
  1970                                      
  1971 0000131D E87FF3                      call get_key
  1972 00001320 B8[7B13]                    mov ax, ._header
  1973 00001323 E8ABF2                      call disp_str
  1974 00001326 89D8                        mov ax, bx
  1975 00001328 E874F2                      call disp_word_hex
  1976 0000132B E8CFF3                      call disp_nl
  1977                                  
  1978 0000132E E853F1                      call get_key_st
  1979 00001331 89C3                        mov bx, ax
  1980                                  
  1981 00001333 89D9                        mov cx, bx
  1982 00001335 83E101                      and cx, 0x01
  1983 00001338 83F900                      cmp cx, 0
  1984 0000133B 7406                        je ._next1
  1985 0000133D B8[8213]                    mov ax, ._r_shift
  1986 00001340 E88EF2                      call disp_str
  1987                                  
  1988                                  ._next1:
  1989                                  
  1990 00001343 89D9                        mov cx, bx
  1991 00001345 83E102                      and cx, 0x02
  1992 00001348 83F900                      cmp cx, 0
  1993 0000134B 7406                        je ._next2
  1994 0000134D B8[9213]                    mov ax, ._l_shift
  1995 00001350 E87EF2                      call disp_str
  1996                                  
  1997                                  ._next2:
  1998                                  
  1999 00001353 89D9                        mov cx, bx
  2000 00001355 83E104                      and cx, 0x04
  2001 00001358 83F900                      cmp cx, 0
  2002 0000135B 7406                        je ._next3
  2003 0000135D B8[A213]                    mov ax, ._ctrl
  2004 00001360 E86EF2                      call disp_str
  2005                                  
  2006                                  ._next3:
  2007                                  
  2008 00001363 89D9                        mov cx, bx
  2009 00001365 83E108                      and cx, 0x08
  2010 00001368 83F900                      cmp cx, 0
  2011 0000136B 7406                        je ._next4
  2012 0000136D B8[AB13]                    mov ax, ._alt
  2013 00001370 E85EF2                      call disp_str
  2014                                  
  2015                                  ._next4:
  2016                                  
  2017                                  
  2018 00001373 E887F3                      call disp_nl
  2019                                  
  2020 00001376 EBA5                        jmp ._loop
  2021                                  
  2022                                      ; 処理終了
  2023                                      ;call power_off
  2024 00001378 E8AAEC                      call _hlt
  2025                                  
  2026                                  
  2027                                  ._header:
  2028 0000137B 6B6579203A2000              db 'key : ', 0x00
  2029                                  
  2030                                  ._r_shift:
  2031 00001382 202072696768742073-         db '  right shift', 0x0d, 0x0a, 0x00
  2031 0000138B 686966740D0A00     
  2032                                  
  2033                                  ._l_shift:
  2034 00001392 20206C656674202073-         db '  left  shift', 0x0d, 0x0a, 0x00
  2034 0000139B 686966740D0A00     
  2035                                  
  2036                                  ._ctrl:
  2037 000013A2 20204354524C0D0A00          db '  CTRL', 0x0d, 0x0a, 0x00
  2038                                  
  2039                                  ._alt:
  2040 000013AB 2020414C540D0A00            db '  ALT', 0x0d, 0x0a, 0x00
  2041                                  
  2042                                  ;==============================================================
  2043                                  ; ファイル長の調整
  2044                                  ;==============================================================
  2045                                  _padding:
  2046 000013B3 00<rep FEC4Dh>              times 0x100000-($-$$) db 0
  2047                                  
