X86系のレガシーと戯れます。

<Remarks timestamp="2025年6月5日 16:08:57"/>
仕切り直して作り直し

親→子→孫
↓    →孫
チェーン

みたいな構成

<Remarks timestamp="2025年6月6日 10:21:28"/>
仕切り直し。
どうしてもバグというかバケが取れなかった。

孫（task3）追加の検討

動的タスク管理（リスト/キュー導入）

context 初期値の自動設定

デバッガ出力やVRAMアドレス調整

<Remarks timestamp="2025年6月6日 15:54:48"/>
11.second.2
とりあえず子供と二人の孫で割り込み駆動できるところまで。
裸の割り込みでスタック依存の戻り方をしている。
次はコンテキストを固めたいな。

<Remarks timestamp="2025年6月6日 16:00:18"/>

何個のタスクを管理する？

  例：子1・子2・親を含めて3タスク？

保存場所は固定？ 動的？

  メモリ上のテーブルか、セグメントごとに個別？

保存のタイミング

  割り込み開始時に？

使用予定レジスタ

  どこまで保存対象にするか（最低限 or フル

<Remarks timestamp="2025年6月8日 7:45:09"/>
FF→58
→5959
０→5690

<Remarks timestamp="2025年6月8日 10:28:53"/>
11.second.3.x

スタックを食いつぶすバージョン
喰いつ美して止まる

<Remarks timestamp="2025年6月9日 5:38:55"/>
11.second.4
スタックを食いつぶしていそうなバージョン
一応スイッチとかはうまく動いていそう
しばらく動いた後止まる

<Remarks timestamp="2025年6月9日 11:13:20"/>
11.second.5
綱渡りのようなバランスでスタックの枯渇を回避しているバージョン
空popを多数配置。
一応0xFFFFを3周以上しても大丈夫だった。

<Remarks timestamp="2025年6月9日 11:36:58"/>
11.second.6
直前のものの空popをmainに集約したバージョン
子供側の空popをなくした。
一応動いているっぽい






